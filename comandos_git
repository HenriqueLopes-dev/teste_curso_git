COMANDOS BÁSICOS:
git init -> inicia git numa pasta
git clone -> clona um repo
git remote -v -> mostra as conexoes atuais
git remote rm origin -> remove a origin atual
git status -> mostra como estao as commits e tals
git add . -> adiciona os arquivos criados
git rm "nomedoarquivo" -> remove o arquivo da repo
git commit -a -m "mensagem qualquer" -> commita as mudancas feitas, escrever uma mensagem é boa pratica
git push -> envia o codigo para o repo
git pull -> recebe a ultima versao da repo
git log -> lista todos os commits realizados
git mv "nomedoarquivo" "novonome" -> move o arquivo e/ou renomeia
git checkout "nomedoarquivo" -> volta o arquivo para o original (so funciona antes do commit)
git reset --hard origin/main -> volta a branch para o original da repo

COMANDOS ALTERNATIVOS:
git fetch -a -> atualiza os branchs que podem ter sido criados por outros, ao usar o checkout ele aparece nos branchs atuais
git submodule -> lista os submodulos da repo
git submodule add https://github.com/usuario/repositorio_submodule -> adiciona submodule
git push --recurse-submodules=on-demand -> para dar o push no submodule
git show -> mostra detalhes da branch atual
git show "tag" -> mostra detalhes da tag
git diff -> mostra a diferenca do branch atual com o repo
git diff "branch" -> mostra as diferencas do branca atual com outro branch
git diff "branch" "branch2" -> mostra as diferencas entre 2 branches
git shortlog -> log resumido do projeto
git clean -f -> remove os arquivos ou mudancas untrackeds
git gc -> exclui os arquivos nao necessarios
git fsck -> verifica a integridade dos arquivos
git reflog -> log mais detalhado da pra fazer o git reset --hard "iddareflog"
git archieve --format zip --output projeto.zip main -> transforma a repo em um arquivo compactado

BRANCH:
git branch -> visualiza todas as branchs
git branch "nomedabranch" -> cria uma nova branch
git branch -d "nomedabranch" -> deleta a branch
git checkout "nomedabranch" -> muda para a branch
git checkout -b "nomedabranch" -> cria e muda para a branch
git merge "nomedabranch" -> junta a branch atual com a branch escrita

STASH:
git stash -> volta tudo para como esta na repo, porem pode ser recuperado (so funciona antes do commit)
git stash list -> lista todas as stash da branch, possui indices
git stash apply "n indice" -> recupera uma stash
git stash drop "n indice" -> apaga a stash
git stash clear -> apaga todas as stashes

TAG:
git tag -> lista todas as tags da branch
git tag -a "v1.0" -m "comentario qualquer" -> usado para salvar uma parte do progresso, pode ser voltado para esse estagio
git show "nome tag" -> mostra detalhes da tag
git checkout "nome tag" -> troca de tag
git push origin "v1.0" -> envia para o repo a tag
git push origin --tags -> envia todas as tags para a repo
OBS: sempre dar commit antes de criar a tag

GARANTE COMANDOS SEM PEDIR AUTENTIFICACAO:
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
git remote set-url origin git@github.com:usuario/repositorio.git
OBS: nem tente entender, apenas mude o endereco do repositorio
